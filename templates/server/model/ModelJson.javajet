<%@ jet package="jet.server.model" 
imports="java.util.* gerapp.app.* jet.wrappers.base.* jet.wrappers.angular.* gerapp.modelo.* gerapp.modelo.node.* " 
class="ModelJson" %>

<%
Recursos recursos = (Recursos) argument;  
Configuracao conf = recursos.getConfiguracao();
ClasseWrapperAngular classe = (ClasseWrapperAngular) recursos.getClasse();
%>
{
  "name": "<%= classe.getNomeModeloServer() %>",
  "base": "PersistedModel",
  "idInjection": true,
  "options": {
    "validateUpsert": true
  },
  "properties": {
<%
boolean primeiro = true;
Iterator<AtributoWrapper> iteradorAtt = classe.getIteratorAtributo();
while (iteradorAtt.hasNext()) {
	AtributoWrapper atributo = (AtributoWrapper) iteradorAtt.next();
	if (primeiro) { primeiro = false; } else {%>,<% } %> 
	"<%= atributo.getNomeVariavel() %>": {
      "type": "<%= atributo.getTipoNode() %>"
    }
<%
}
%>
  },
  "validations": [],
  "relations": {
<%
primeiro = true;
Iterator<RelacionamentoWrapper> itRel =  classe.obtemListaSemChaveEstrangeira().iterator();
while (itRel.hasNext()) {
	RelacionamentoWrapper relac = itRel.next();
	ClasseWrapperAngular oposta = (ClasseWrapperAngular) relac.getClasseOposta();
	if (primeiro) { primeiro = false; } else {%>,<% } %> 
	"<%= oposta.getNomeParaVariavel() %>": {
      "type": "belongsTo",
      "model": "<%= oposta.getNomeModeloServer() %>",
      "foreignKey": ""
    }
<%
}
%>  
  },
  "acls": [],
  "methods": {}
}