<%@ jet package="jet.server.database" 
imports="java.util.* gerapp.app.* jet.wrappers.base.* jet.wrappers.angular.* gerapp.modelo.* gerapp.modelo.node.*" 
class="MySqlCreate" %>

<%
Recursos recursos = (Recursos) argument;  
Configuracao conf = recursos.getConfiguracao();
List<ClasseWrapper> listaClasse = recursos.getListaClasse();
%>
<%
Iterator<ClasseWrapper> iterador = listaClasse.iterator();
while (iterador.hasNext()) {
	ClasseWrapperAngular item = (ClasseWrapperAngular) iterador.next();
%>
repair table <%= item.getNomeModeloServer() %>;
drop table if exists <%= item.getNomeModeloServer() %>;
create table <%= item.getNomeModeloServer() %> (
<%
// Atributos
boolean primeiro = true;
Iterator<AtributoWrapper> iteradorAtt = item.getIteratorAtributo();
while (iteradorAtt.hasNext()) {
	AtributoWrapper atributo = (AtributoWrapper) iteradorAtt.next();
%> 
	<%= atributo.getNomeVariavel() %>  <% if (atributo.ehChave()) {%> VARCHAR(50) <% } else {%> <%= atributo.getTipoSql() %>  <% } %>,
<%
}
%>

<%
// Chave estrangeira de relacionamentos

Iterator<RelacionamentoWrapper> itRel =  item.obtemListaSemChaveEstrangeira().iterator();
while (itRel.hasNext()) {
	RelacionamentoWrapper relac = itRel.next();
	ClasseWrapperAngular oposta = (ClasseWrapperAngular) relac.getClasseOposta();
%> 
	<%= oposta.getNomeParaVariavel() %>Id VARCHAR(50),
	 <%
}
%>  

	PRIMARY KEY (<%= item.getChaveW().getNomeVariavel() %>)
	
	
	
); 
<%
}
%>

<%
// Alterando para colocar chave estrangeira
iterador = listaClasse.iterator();
while (iterador.hasNext()) {
	ClasseWrapperAngular item = (ClasseWrapperAngular) iterador.next();
%>
alter table <%= item.getNomeModeloServer() %>
<%
Iterator<RelacionamentoWrapper> itRel =  item.obtemListaSemChaveEstrangeira().iterator();
while (itRel.hasNext()) {
	RelacionamentoWrapper relac = itRel.next();
	ClasseWrapperAngular oposta = (ClasseWrapperAngular) relac.getClasseOposta();
%> 
ADD FOREIGN KEY (<%= oposta.getNomeParaVariavel() %>Id) REFERENCES <%= oposta.getNomeModeloServer() %>(<%= oposta.getChaveW().getNomeVariavel()%>) ON DELETE CASCADE,
<%
}
%> 

<%
}
%>


