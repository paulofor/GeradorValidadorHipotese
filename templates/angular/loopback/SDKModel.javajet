<%@ jet package="jet.angular.loopback" 
imports="java.util.* gerapp.app.* jet.wrappers.base.* jet.wrappers.angular.* gerapp.modelo.* " 
class="SDKModel" %>

<%
Recursos recursos = (Recursos) argument;  
List<ClasseWrapper> classes = recursos.getListaClasse();
Configuracao conf = recursos.getConfiguracao();
%>
import { Injectable } from '@angular/core';
import { Container } from '../../models/Container';
import { User } from '../../models/User';
import { Visitante } from '../../models/Visitante';
import { DispositivoUsuario } from '../../models/DispositivoUsuario';
import { VisitaApp } from '../../models/VisitaApp';
<%
Iterator<ClasseWrapper> iterador = classes.iterator();
while (iterador.hasNext()) {
	ClasseWrapper classe = iterador.next();
%>
import { <%= classe.getNomeParaClasse() %> } from '../../models/<%= classe.getNomeParaClasse() %>';
<%
}
%>
export interface Models { [name: string]: any }

@Injectable()
export class SDKModels {

  private models: Models = {
<%
iterador = classes.iterator();
while (iterador.hasNext()) {
	ClasseWrapper classe = iterador.next();
%>
	<%= classe.getNomeParaClasse() %>: <%= classe.getNomeParaClasse() %>,
<%
}
%>
	User: User,
    Container: Container,
    Visitante : Visitante,
    DispositivoUsuario : DispositivoUsuario,
    VisitaApp : VisitaApp
  };

  public get(modelName: string): any {
    return this.models[modelName];
  }

  public getAll(): Models {
    return this.models;
  }

  public getModelNames(): string[] {
    return Object.keys(this.models);
  }
}
