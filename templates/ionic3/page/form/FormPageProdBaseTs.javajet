<%@ jet package="jet.ionic3.page.form" 
imports="java.util.* gerapp.app.* jet.wrappers.base.* jet.wrappers.base.node.* jet.wrappers.angular.* gerapp.modelo.* gerapp.modelo.node.*" 
class="FormPageProdBaseTs" %>
<%
Recursos recursos = (Recursos) argument;  
TelaAppWrapper tela = (TelaAppWrapper) recursos.getItemCorrente();
ClasseWrapper classe = tela.getEntidade();
Configuracao conf = recursos.getConfiguracao();
%>
import { <%= tela.getEntidade().getNomeParaClasse() %>, <%= tela.getEntidade().getNomeParaClasse() %>Api , LoopBackFilter } from '../../shared/sdk';
<%
Iterator<RelacionamentoWrapper> itRel =  classe.obtemListaSemChaveEstrangeira().iterator();
while (itRel.hasNext()) {
	RelacionamentoWrapper relac = itRel.next();
	ClasseWrapper oposta = relac.getClasseOposta();
%>
import { <%= oposta.getNomeParaClasse() %>, <%= oposta.getNomeParaClasse() %>Api } from '../../shared/sdk';
<%
}
%>
import { NavParams, NavController } from 'ionic-angular';

export abstract class <%= tela.getNome() %>Base {
  
  protected item: <%= tela.getEntidade().getNomeParaClasse() %>;
  
  protected abstract inicializacaoComplementos();
  protected abstract criaItem() : <%= tela.getEntidade().getNomeParaClasse() %>;
  protected abstract executaNavegacao(navCtrl: NavController, result: <%= tela.getEntidade().getNomeParaClasse() %>);
  protected abstract filtroLoadId() : LoopBackFilter;
  protected abstract complementaItem(novo:<%= tela.getEntidade().getNomeParaClasse() %>) : <%= tela.getEntidade().getNomeParaClasse() %>;

  constructor(	public navParams: NavParams,
  				public navCtrl: NavController,
				public srv: <%= tela.getEntidade().getNomeParaClasse() %>Api, 
<%
itRel =  classe.obtemListaSemChaveEstrangeira().iterator();
while (itRel.hasNext()) {
	RelacionamentoWrapper relac = itRel.next();
	ClasseWrapper oposta = relac.getClasseOposta();
%>
				public srv<%= oposta.getNomeParaClasse() %> : <%= oposta.getNomeParaClasse() %>Api,
<%
}
%>
  				) {
  }
  private inicializaItem() {
	this.item = this.navParams.get('item');
	console.log('<%= tela.getNome() %>Base:ItemParametro: ', this.item);
	if (!this.item) {
		var id = this.navParams.get('id');
		if (id) {
			console.log('<%= tela.getNome() %>Base:Id: ' , id);
			this.srv.findById(id, this.filtroLoadId())
				.subscribe((result:<%= tela.getEntidade().getNomeParaClasse() %>) => {
					this.item = result;
					console.log('<%= tela.getNome() %>Base:LoadId: ' , this.item);
				})
		} else {
			this.item = this.criaItem();
			console.log('<%= tela.getNome() %>Base:ItemCriado: ', this.item);
		}
	} else {
		this.item = this.complementaItem(this.item);
	}
  }
  ionViewWillEnter() {
    console.log('ionViewWillEnter <%= tela.getNome() %>');
    this.inicializacaoComplementos();
    this.inicializaItem();
  }
  ionViewDidLoad() {
  	console.log('ionViewDidLoad <%= tela.getNome() %>');
  }
  
<%
itRel =  classe.obtemListaSemChaveEstrangeira().iterator();
while (itRel.hasNext()) {
	RelacionamentoWrapper relac = itRel.next();
	ClasseWrapper oposta = relac.getClasseOposta();
%>
	protected lista<%= oposta.getNomeParaClasse() %> : <%= oposta.getNomeParaClasse() %>[];
	protected carrega<%= oposta.getNomeParaClasse() %>(){
		this.srv<%= oposta.getNomeParaClasse() %>.find()
      		.subscribe((result:<%= oposta.getNomeParaClasse() %>[]) => {
        		console.log('lista<%= oposta.getNomeParaClasse() %>:' , result);
        		this.lista<%= oposta.getNomeParaClasse() %> = result;
      	})
	}
	protected lista<%= oposta.getNomeParaClasse() %>Usuario : <%= oposta.getNomeParaClasse() %>[];
	protected carrega<%= oposta.getNomeParaClasse() %>Usuario(idUsuario:number){
		this.srv<%= oposta.getNomeParaClasse() %>.find({'where' : {'idUsuario' : idUsuario} })
      		.subscribe((result:<%= oposta.getNomeParaClasse() %>[]) => {
        		this.lista<%= oposta.getNomeParaClasse() %>Usuario = result;
      	})
	}
<%
}
%>
	protected submit() {
		console.log('<%= tela.getNome() %>Base:Submit-Item:' , this.item);
    	this.srv.submit<%= tela.getNome() %>(this.item)
      		.subscribe((resultado:<%= tela.getEntidade().getNomeParaClasse() %>) => {
        		console.log('<%= tela.getNome() %>Base:Submit-Result: ' , resultado);
				this.executaNavegacao(this.navCtrl,resultado);
      	})
	}
}
